# .github/workflows/app.yaml
name: Test and build then
# on: workflow_dispatch
on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create true
          poetry install

      - name: Test with Poetry
        env: 
          # PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          PROJECT_NAME: template_svc
          POSTGRES_SERVER: localhost:5432
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: qwerty123
          POSTGRES_DB: test_db
        run: |
          poetry config --local virtualenvs.in-project true
          poetry lock --no-update
          pip install pytest-dotenv
          poetry run pytest -v app
  dockerbuild:
    name: "Build and upload to registry"
    permissions:
      contents: read
      packages: write
    if: |
      github.event.inputs.make_build ||
      github.event_name == 'repository_dispatch'
    runs-on: ubuntu-22.04
    steps:
    - 
      name: Generate REPO envvar
      run: echo "REPO=ghcr.io/ginroot/ginroot" >> $GITHUB_ENV
    - 
      name: Set tag
      id: set-tag
      run: |
        if [[ '${{ github.event.inputs.tag }}' ]]
        then
          echo Setting tag to input
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
        else
          echo Setting tag to ref 
          echo "TAG=${{ env.REF }}" >> $GITHUB_ENV
        fi
    - 
      run: echo "TAG is ${{ env.TAG }}"
    - 
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
         registry: ${{ env.REGISTRY }}
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    - 
      name: Build the builder image
      run: |
        docker buildx build \
          --platform linux/amd64 --file Dockerfile \
          --tag ${{ env.REPO }}/ginroot:${{ env.TAG }} \
          --push \
          .



