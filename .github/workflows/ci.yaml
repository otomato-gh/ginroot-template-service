# .github/workflows/app.yaml
name: Test and build then
# on: workflow_dispatch
on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
         # path: ~/.local/share/virtualenvs
          path: ~/
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
      - name: Run test suite
        run: |
          pipenv run test -v

#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install poetry
#          poetry config virtualenvs.create true
#          poetry install
#      - name: Test with Poetry
#        run: |
#          poetry config --local virtualenvs.in-project true
#          poetry lock --no-update
#          poetry run pytest -v tests
          
          
